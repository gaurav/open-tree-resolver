{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///src/components/phylogeny/Phylotree.vue","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue?bc07","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue?bf90","webpack:///src/App.vue","webpack:///./src/components/PhylorefTable.vue?6c12","webpack:///./src/App.vue?1160","webpack:///./src/components/phylogeny/Phylotree.vue?6bde","webpack:///./src/components/phylogeny/Phylotree.vue?db13","webpack:///./src/components/TopNavigationBar.vue?d403","webpack:///./src/components/TopNavigationBar.vue?bc4f","webpack:///src/components/TopNavigationBar.vue","webpack:///./src/App.vue?bff9","webpack:///./src/store/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/App.vue?9400","webpack:///./src/App.vue?ca03","webpack:///./src/main.js","webpack:///./src/components/TopNavigationBar.vue?d79a","webpack:///src/components/modals/AboutOpenTreeResolverModal.vue","webpack:///src/components/PhylorefTable.vue","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue?f979","webpack:///./src/components/phylogeny/Phylotree.vue?ec67","webpack:///./src/components/phylogeny/Phylotree.vue?5403","webpack:///./src/components/PhylorefTable.vue","webpack:///./src/components/PhylorefTable.vue?25a2","webpack:///./src/components/PhylorefTable.vue?7fb1","webpack:///./src/components/phylogeny/Phylotree.vue?ad27","webpack:///./src/components/TopNavigationBar.vue","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_lodash","_phyx","_vue","_interopRequireDefault","_vueResize","default","component","ResizeObserver","props","newick","type","String","spacingX","Number","phylogenyIndex","uniqueId","reasoningResults","pinningNodes","pinningNodeChildrenIRIs","_set","computed","phylogeny","this","baseURIForPhylogeny","concat","parsedNewick","has","d3","layout","PhylogenyWrapper","getParsedNewickWithIRIs","newick_parser","newickErrors","errors","getErrorsInNewickString","filter","error","title","tree","_this","phylotree","svg","select","options","internal-names","transitions","left-right-spacing","top-bottom-spacing","font_size","style_nodes","element","selectAll","children","classed","undefined","tunits","TaxonomicUnitWrapper","getTaxonomicUnitsFromNodeLabel","style_edges","source","watch","redrawTree","mounted","methods","recurseNodes","node","func","_this2","nodeCount","arguments","parentCount","nextID","forEach","child","size","$","width","spacing_x","update","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","id","tabindex","role","_v","data-dismiss","aria-label","aria-hidden","href","__webpack_exports__","_TopNavigationBar","_PhylorefTable","_AboutOpenTreeResolverModal","components","TopNavigationBar","PhylorefTable","AboutOpenTreeResolverModal","OPEN_TREE_RESOLVER_VERSION","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhylorefTable_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PhylorefTable_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","__WEBPACK_IMPORT_KEY__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_l","errorIndex","_s","message","on","notify","$event","version","onclick","_App_vue_vue_type_template_id_3701b908___WEBPACK_IMPORTED_MODULE_0__","_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__","_vuex","Vue","use","Vuex","debug","process","Store","state","strict","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","e","Error","code","keys","resolve","_bootstrapVue","_App","_store","require","BootstrapVue","VueResize","config","productionTip","el","store","h","App","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TopNavigationBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TopNavigationBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_jquery","_Phylotree","Phylotree","flagDisplayExpression","loadedPhylorefs","openTreeTaxonomyInfoByName","PHYX_CONTEXT_JSON","ONTOLOGY_BASEURI","reasoningInProgress","currentNodes","allSpecifiers","phyloref","getSpecifiersForPhyloref","reduce","acc","val","phylorefsWithMoreThanOneSpecifier","ottIdsForAllSpecifiers","_this3","ottIds","specifier","getOpenTreeTaxonomyID","x","asOntology","_this4","phylorefsWithEquivalentClass","phylogenyNodes","getNodesAsJSONLD","phylorefsByLabel","label","nodeAsParam","_isArray","@id","parent","expectedToResolveTo","labels","expectedPhyloreferenceNamed","phylorefLabel","phylorefId","@type","onProperty","someValuesFrom","intersectionOf","representsTaxonomicUnits","tunit","convertTUtoRestriction","restriction","isString","ontologyHeader","@context","owl:imports","_stringify","exampleJSONLDURLs","url","referencesTaxonomicUnits","results","scientificNames","sciname","wrappedSciname","ScientificNameWrapper","hasValue","binomialName","includesSpecimens","specimen","wrappedSpecimen","SpecimenWrapper","occurrenceID","console","log","reasonOverPhylogeny","_this5","post","jsonld","done","phylorefs","fail","jqXHR","textStatus","errorThrown","responseJSON","alert","always","getOTTNodeId","match","exec","matchMRCA","downloadInducedSubtreeFromOpenTreeOfLife","_this6","ajax","ott_ids","contentType","dataType","success","unknownOttIds","unknown","knownOttIds","getPhylorefDescription","description","cladeDefinition","replace","matches","getScinameForSpecifier","queryOpenTreeTaxonomyIDs","_this7","names","queryOpenTreeTaxonomyIDsForNames","setOpenTreeTaxonomyInfoByNames","_this8","info","trim","taxon","flags","set","_this9","uniq","sort","chunk","getSpecifierType","internalSpecifiers","indexOf","externalSpecifiers","specifiers","getLabelForSpecifier","PhylorefWrapper","getSpecifierLabel","getLabelForSpecifierAsHTML","startsWith","loadJSONLDFromURL","_this10","getJSON","extractPhyloreferencesFromJSONLD","status","statusText","loadJSONLDFromFileInputById","fileInputId","_this11","FileReader","$fileInput","prop","files","file","item","fr","onload","lines","target","JSON","parse","readAsText","addPhyloref","find","phy","isEqual","_this12","subClassOf","includes","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AboutOpenTreeResolverModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AboutOpenTreeResolverModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_thread_loader_dist_cjs_js_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Phylotree_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_PhylorefTable_vue_vue_type_template_id_3041528f___WEBPACK_IMPORTED_MODULE_0__","_PhylorefTable_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__","colspan","_e","phylorefIndex","rowspan","domProps","innerHTML","nodeId","nodeIdIndex","area-label","multiple","change","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","example","click","for","directives","rawName","expression","modifiers","lazy","rows","placeholder","_Phylotree_vue_vue_type_template_id_521315d2___WEBPACK_IMPORTED_MODULE_0__","_Phylotree_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_TopNavigationBar_vue_vue_type_template_id_ccab53fa___WEBPACK_IMPORTED_MODULE_0__","_TopNavigationBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_AboutOpenTreeResolverModal_vue_vue_type_template_id_40ef49c2___WEBPACK_IMPORTED_MODULE_0__","_AboutOpenTreeResolverModal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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AC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,YAAA,OACAC,eAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OAC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","file":"js/app.2b1c6f00.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/open-tree-resolver/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","<template>\n  <div>\n    <template v-if=\"newickErrors.length > 0\">\n      <template v-for=\"(error, errorIndex) of newickErrors\">\n        <p><strong>{{ error.title }}.</strong> {{ error.message }}</p>\n      </template>\n    </template>\n    <template\n      v-else\n      class=\"phylotreeContainer\"\n    >\n      <svg\n        :id=\"'phylogeny' + phylogenyIndex\"\n        class=\"col-md-12 phylogeny\"\n      />\n      <ResizeObserver @notify=\"redrawTree()\" />\n    </template>\n  </div>\n</template>\n\n<script>\n/*\n * This component can be used to insert a phylogeny. It includes code for highlighing\n * the expecting and reasoned clade for a particular phyloreference.\n */\n\nimport { uniqueId, has } from 'lodash';\nimport { PhylogenyWrapper, TaxonomicUnitWrapper } from '@phyloref/phyx';\nimport Vue from 'vue';\nimport { ResizeObserver } from 'vue-resize';\n\n// Set up ResizeObserver.\nVue.component('ResizeObserver', ResizeObserver);\n\n/*\n * Note that this requires the Phylotree Javascript to be loaded in the HTML\n * header: I haven't figured out how to include phylotree.js from within Vue CLI yet.\n */\n\nexport default {\n  name: 'Phylotree',\n  props: {\n    newick: {\n      type: String,\n      default: '()',\n    },\n    spacingX: { // Spacing in the X axis in pixels.\n      type: Number,\n      default: 20,\n    },\n    phylogenyIndex: { // An index number of the phylogeny. Will be used to set up HTML DOM IDs.\n      type: String,\n      default: uniqueId(),\n    },\n    reasoningResults: {\n      type: Object,\n      default: () => { return {}; },\n    },\n  },\n  data() {\n    return {\n      // List of pinning nodes to highlight for a particular phylogeny.\n      pinningNodes: [],\n      // List of pinning nodes and all their children, so the entire clade can be\n      // highlighted as needed.\n      pinningNodeChildrenIRIs: new Set(),\n    };\n  },\n  computed: {\n    phylogeny() {\n      return { newick: this.newick };\n    },\n    baseURIForPhylogeny() {\n      return `http://example.org/#phylogeny${this.phylogenyIndex}`;\n    },\n    parsedNewick() {\n      if (has(window, 'd3') && has(d3, 'layout') && has(d3.layout, 'newick_parser')) {\n        return new PhylogenyWrapper({ newick: this.newick }).getParsedNewickWithIRIs(\n          this.baseURIForPhylogeny,\n          d3.layout.newick_parser,\n        );\n      }\n\n      return new PhylogenyWrapper({ newick: this.newick }).getParsedNewickWithIRIs(\n        this.baseURIForPhylogeny\n      );\n    },\n    newickErrors() {\n      const errors = PhylogenyWrapper.getErrorsInNewickString(this.newick);\n\n      // For historical reason, we consider an empty Newick string as an error.\n      // We should not do this.\n      return errors.filter(error => error.title !== 'No phylogeny entered');\n    },\n    tree() {\n      // Is Phylotree actually loaded? If not, bail out.\n      if (!has(window, 'd3') || !has(d3, 'layout') || !has(d3.layout, 'phylotree')) return;\n\n      // Set up Phylotree.\n      const tree = d3.layout.phylotree()\n        .svg(d3.select(`#phylogeny${this.phylogenyIndex}`))\n        .options({\n          'internal-names': true,\n          transitions: false,\n          'left-right-spacing': 'fit-to-size',\n          'top-bottom-spacing': 'fixed-step',\n        })\n        .font_size(16)\n        .style_nodes((element, data) => {\n          // Instructions used to style nodes in Phylotree\n          // - element: The D3 element of the node being styled\n          // - data: The data associated with the node being styled\n\n          // Make sure we don't already have an internal label node on this SVG node!\n          let textLabel = element.selectAll('text');\n\n          if (has(data, 'name') && data.name !== '' && data.children) {\n            // If the node has a label and has children (i.e. is an internal node),\n            // we display it next to the node by creating a new 'text' element.\n            if (0 && textLabel.empty()) {\n              textLabel = element.append('text');\n\n              // Place internal label to the left of the root node.\n              textLabel.classed('internal-label', true)\n                .text(data.name)\n                .attr('dx', '.3em')\n                .attr('dy', '.3em');\n            }\n          }\n\n          // Maybe this isn't a pinning node, but it is a child of a pinning node.\n          if (\n            has(data, '@id')\n            && this.pinningNodeChildrenIRIs.has(data['@id'])\n          ) {\n            // Apply a class.\n            // Note that this applies to the resolved-node too.\n            element.classed('descendant-of-pinning-node-node', true);\n          }\n\n          if (data.name !== undefined && data.children === undefined) {\n            // Labeled leaf node! Look for taxonomic units.\n            const tunits = TaxonomicUnitWrapper.getTaxonomicUnitsFromNodeLabel(data.name);\n\n            if (tunits.length === 0) {\n              element.classed('terminal-node-without-tunits', true);\n            }\n          }\n        })\n        .style_edges((element, data) => {\n          // Is the parent a descendant of a pinning node? If so, we need to\n          // select this branch!\n          if (\n            has(data, 'source')\n            && has(data.source, '@id')\n            && this.pinningNodeChildrenIRIs.has(data.source['@id'])\n          ) {\n            // Apply a class to this branch.\n            element.classed('descendant-of-pinning-node-branch', true);\n          } else {\n            element.classed('descendant-of-pinning-node-branch', false);\n          }\n        });\n      tree(this.parsedNewick);\n      return tree;\n    },\n  },\n  watch: {\n    reasoningResults() {\n      // If reasoning occurs, we'll need to redraw this tree.\n      this.redrawTree();\n    },\n    newick() {\n      // If the Newick changes, redraw the tree.\n      this.redrawTree();\n    },\n  },\n  mounted() {\n    // Redraw the tree when this component is loaded for the first time.\n    this.redrawTree();\n  },\n  methods: {\n    recurseNodes(node, func, nodeCount = 0, parentCount = undefined) {\n      // Recurse through PhyloTree nodes, executing function on each node.\n      //  - node: The node to recurse from. The function will be called on node\n      //          *before* being called on its children.\n      //  - func: The function to call on `node` and all of its children.\n      //  - nodeCount: `node` will be called with this nodeCount. All of its\n      //          children will be called with consecutively increasing nodeCounts.\n      //  - parentCount: The nodeCount associated with the parent of this node\n      //          within this run of recurseNodes. For instance, immediate children\n      //          of `node` will have a parentCount of 0. By default, `node` itself\n      //          will have a parentCount of `undefined`.\n      // When the function `func` is called, it is given three arguments:\n      //  - The current node object (initially: `node`)\n      //  - The count of the current node object (initially: `nodeCount`)\n      //  - The parent count of the current node object (initially: `parentCount`)\n      func(node, nodeCount, parentCount);\n\n      let nextID = nodeCount + 1;\n\n      // Recurse through all children of this node.\n      if (has(node, 'children')) {\n        node.children.forEach((child) => {\n          nextID = this.recurseNodes(\n            child,\n            func,\n            nextID,\n            nodeCount,\n          );\n        });\n      }\n\n      return nextID;\n    },\n    redrawTree() {\n      // Reset the pinning node information before redrawing.\n      this.pinningNodes = [];\n      this.pinningNodeChildrenIRIs = new Set();\n\n      // Do we have a tree?\n      const tree = this.tree;\n\n      if (tree !== undefined) {\n        // Draw the tree.\n        this.tree\n          .size([\n            // height\n            0,\n            // width\n            $(`#phylogeny${this.phylogenyIndex}`).width() + 92,\n            // We need more space because our fonts are bigger than the default.\n          ])\n          .spacing_x(this.spacingX)\n          .update();\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.phylogeny {\n  width: 100%;\n}\n.phylotreeContainer {\n  /* Required for Vue-Resize to track its size */\n  position: relative;\n}\n\n/*\n * Classes for phylogeny SVG elements\n */\n\n/*\n * Phylotree .node refers to the SVG groups that contain both the\n * node itself as well as the text label next to it. This is confusing,\n * but we will try to use that consistently below: *-node refers to the group\n * that includes both the node as well as the label with it, while *-label\n * refers only to the labels next to the nodes.\n */\n.node {\n  /* Phylotree's CSS sets this to 10px; we prefer larger node labels */\n  font-size: 14pt;\n}\n\n/* Labels for internal nodes, whether phylorefs or not */\n.internal-label {\n  font-family: serif;\n  font-size: 16pt;\n  font-style: italic;\n\n  text-anchor: start; /* Align text so it starts at the coordinates provided */\n}\n\n/* Node label for an internal specifier */\n.internal-specifier-node text {\n    font-weight: bolder;\n    fill: rgb(0, 24, 168) !important;\n}\n\n/* Node label for an external specifier */\n.external-specifier-node text {\n    font-weight: bolder;\n    fill: rgb(0, 24, 168) !important;\n}\n\n/* Node label for a terminal node without taxonomic units */\n.terminal-node-without-tunits {\n}\n\n/* The selected internal label on a phylogeny, whether determined to be the pinning node or not. */\n.selected-internal-label {\n    font-size: 16pt;\n    fill: rgb(0, 24, 168);\n}\n\n/*\n * An additional class for nodes that are the pinning node. When the phyloreference\n * resolves to a single terminal node, it will be laid out in this way, rather\n * than as an .internal-specifier-node.\n */\n.pinning-node text {\n    font-weight: bolder;\n}\n\n/*\n * The descendant-of-pinning-node class instructions below apply to the entire resolved node,\n * which includes the circle as well as the text label. We want to coordinate\n * colours between:\n *  - The circle that appears next to the node label,\n *  - The node label, whether internal or terminal, and\n *  - The branches descending from the pinning node.\n *\n * Note that .internal-specifier-node is set up to override this formatting, so\n * internal node labels will be formatted differently from other terminals\n * descending from the pinning node.\n */\n.descendant-of-pinning-node-node circle {\n  fill: rgb(0, 24, 168);\n}\n\n.descendant-of-pinning-node-node text {\n}\n\n.descendant-of-pinning-node-branch {\n  stroke: rgb(0, 24, 168);\n}\n\n/*\n * Create a table class for a fixed size body.\n * Based on https://stackoverflow.com/a/23518856/27310\n */\n.table-fixed-height {\n}\n\n.table-fixed-height thead {\n    display: block;\n    width: 100%;\n}\n\n.table-fixed-height tbody {\n    display: block;\n    width: 100%;\n    height: 15em;\n    overflow-y: scroll;\n    z-index: -1;\n}\n\n.table-fixed-height tr {\n    width: 100%;\n    display: inline-table;\n    table-layout: fixed;\n}\n\n/*\n * The following code is stolen from Bootstrap 3.3, which is a Phylotree.js\n * dependency. Since we otherwise use Bootstrap 4+, we need to override this\n * here so the menu works.\n *\n * We apply it only to subclasses of #d3_layout_phylotree_context_menu to limit\n * their fallout on other elements.\n */\n#d3_layout_phylotree_context_menu.dropdown-menu {\n position: absolute;\n top: 100%;\n left: 0;\n z-index: 1000;\n display: none;\n float: left;\n min-width: 160px;\n padding: 5px 0;\n margin: 2px 0 0;\n font-size: 14px;\n text-align: left;\n list-style: none;\n background-color: #fff;\n -webkit-background-clip: padding-box;\n         background-clip: padding-box;\n border: 1px solid #ccc;\n border: 1px solid rgba(0, 0, 0, .15);\n border-radius: 4px;\n -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, .175);\n         box-shadow: 0 6px 12px rgba(0, 0, 0, .175);\n}\n#d3_layout_phylotree_context_menu.dropdown-menu.pull-right {\n right: 0;\n left: auto;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu .divider {\n height: 1px;\n margin: 9px 0;\n overflow: hidden;\n background-color: #e5e5e5;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a {\n display: block;\n padding: 3px 20px;\n clear: both;\n font-weight: normal;\n line-height: 1.42857143;\n color: #333;\n white-space: nowrap;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a:focus {\n color: #262626;\n text-decoration: none;\n background-color: #f5f5f5;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a,\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a:focus {\n color: #fff;\n text-decoration: none;\n background-color: #337ab7;\n outline: 0;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:focus {\n color: #777;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:focus {\n text-decoration: none;\n cursor: not-allowed;\n background-color: transparent;\n background-image: none;\n filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n}\n.open > #d3_layout_phylotree_context_menu.dropdown-menu {\n display: block;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu-right {\n right: 0;\n left: auto;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu-left {\n right: auto;\n left: 0;\n}\n#d3_layout_phylotree_context_menu.dropdown-header {\n display: block;\n padding: 3px 20px;\n font-size: 12px;\n line-height: 1.42857143;\n color: #777;\n white-space: nowrap;\n}\n#d3_layout_phylotree_context_menu.dropdown-backdrop {\n position: fixed;\n top: 0;\n right: 0;\n bottom: 0;\n left: 0;\n z-index: 990;\n}\n\n</style>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal\",attrs:{\"id\":\"about-open-tree-resolver\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(\"\\n          About this tool\\n        \")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"\\n            ×\\n          \")])])]),_c('div',{staticClass:\"modal-body col-md-12\"},[_c('p',[_vm._v(\"\\n          The Phyloreference Open Tree Resolver was built as part of the\\n          \"),_c('a',{attrs:{\"href\":\"https://www.phyloref.org\"}},[_vm._v(\"\\n            Phyloreferencing project\\n          \")]),_vm._v(\",\\n          funded by the US National Science Foundation through collaborative\\n          grants \"),_c('a',{attrs:{\"href\":\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458484\"}},[_vm._v(\"\\n            DBI-1458484\\n          \")]),_vm._v(\"\\n          and \"),_c('a',{attrs:{\"href\":\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458604\"}},[_vm._v(\"\\n            DBI-1458604\\n          \")]),_vm._v(\".\\n          See \"),_c('a',{attrs:{\"href\":\"http://www.phyloref.org/about/#funding\"}},[_vm._v(\"\\n            Funding\\n          \")]),_vm._v(\" for details.\\n        \")]),_c('p',[_vm._v(\"The Curation Tool uses a number of open-source libraries, including:\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://cli.vuejs.org/\"}},[_vm._v(\"\\n              Vue CLI 3\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://getbootstrap.com/\"}},[_vm._v(\"\\n              Bootstrap\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://jquery.com/\"}},[_vm._v(\"\\n              jQuery\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/veg/phylotree.js\"}},[_vm._v(\"\\n              phylotree.js\\n            \")]),_vm._v(\",\\n            published as \"),_c('a',{attrs:{\"href\":\"https://doi.org/10.1186/s12859-018-2283-2\"}},[_vm._v(\"\\n              Shank \"),_c('em',[_vm._v(\"et al\")]),_vm._v(\", 2018\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://d3js.org/\"}},[_vm._v(\"\\n              D3.js\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://momentjs.com/\"}},[_vm._v(\"\\n              Moment.js\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/eligrey/FileSaver.js\"}},[_vm._v(\"\\n              FileSaver.js\\n            \")])])])]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"\\n          Close\\n        \")])])])])])}]\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"66bcdb1a-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutOpenTreeResolverModal.vue?vue&type=template&id=40ef49c2&\"","<template>\n  <div id=\"app\">\n    <TopNavigationBar :version=\"OPEN_TREE_RESOLVER_VERSION\" />\n    <div id=\"wrapper\">\n      <PhylorefTable />\n    </div>\n\n    <!-- All modals are included here -->\n    <AboutOpenTreeResolverModal />\n  </div>\n</template>\n\n<script>\n/*\n * Lays out the entire page, including inserting the (hidden) modals so they can be displayed.\n */\n\n// Navigation controls.\nimport TopNavigationBar from './components/TopNavigationBar.vue';\n\n// Major UI components.\nimport PhylorefTable from './components/PhylorefTable.vue';\n\n// Modal dialogs to be displayed above the UI.\nimport AboutOpenTreeResolverModal from './components/modals/AboutOpenTreeResolverModal.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    TopNavigationBar,\n    PhylorefTable,\n    AboutOpenTreeResolverModal,\n  },\n  data: function() { return {\n    OPEN_TREE_RESOLVER_VERSION: \"0.1.0\",\n  }},\n};\n</script>\n\n<style>\n/*\n * Classes for overall design.\n */\n\n#wrapper {\n  margin-top: 64px;\n  padding: 0.5em 1em;\n  transition: all 0.4s ease 0s;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefTable.vue?vue&type=script&lang=js&\"","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.newickErrors.length > 0)?[_vm._l((_vm.newickErrors),function(error,errorIndex){return [_c('p',[_c('strong',[_vm._v(_vm._s(error.title)+\".\")]),_vm._v(\" \"+_vm._s(error.message))])]})]:[_c('svg',{staticClass:\"col-md-12 phylogeny\",attrs:{\"id\":'phylogeny' + _vm.phylogenyIndex}}),_c('ResizeObserver',{on:{\"notify\":function($event){return _vm.redrawTree()}}})]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"66bcdb1a-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=template&id=521315d2&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('nav',{staticClass:\"navbar navbar-expand navbar-dark bg-dark mb-2 fixed-top\"},[_c('a',{staticClass:\"navbar-brand\",attrs:{\"href\":\"index.html\"}},[_vm._v(\"\\n      Open Tree Resolver v\"+_vm._s(_vm.version)+\"\\n    \")]),_vm._m(0)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse navbar-collapse\"},[_c('ul',{staticClass:\"navbar-nav\"},[_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"#\",\"onclick\":\"$('#about-open-tree-resolver').modal()\"}},[_vm._v(\"\\n            About this tool\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://www.phyloref.org/\"}},[_vm._v(\"\\n            Phyloreferencing website\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://github.com/phyloref/open-tree-resolver\"}},[_vm._v(\"\\n            Github repository\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://github.com/phyloref/open-tree-resolver/issues\"}},[_vm._v(\"\\n            Report bug\\n          \")])])])])}]\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"66bcdb1a-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=template&id=ccab53fa&\"","<template>\n  <div>\n    <!-- Navigation bar at the top of the page -->\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark mb-2 fixed-top\">\n      <a\n        class=\"navbar-brand\"\n        href=\"index.html\"\n      >\n        Open Tree Resolver v{{ version }}\n      </a>\n      <div class=\"collapse navbar-collapse\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"#\"\n              onclick=\"$('#about-open-tree-resolver').modal()\"\n            >\n              About this tool\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://www.phyloref.org/\"\n            >\n              Phyloreferencing website\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://github.com/phyloref/open-tree-resolver\"\n            >\n              Github repository\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://github.com/phyloref/open-tree-resolver/issues\"\n            >\n              Report bug\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </div>\n</template>\n\n<script>\n\n/*\n * The top navigation bar provides links to Phyloreferencing resources,\n * the about-us modal, and a link to report bugs.\n */\n\nexport default {\n  name: 'TopNavigationBar',\n  props: {\n    version: {\n      type: String,\n      default: 'UNKNOWN',\n    },\n  },\n};\n</script>\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3701b908&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Include Vue and Vuex to set up them up correctly.\nimport Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nconst debug = process.env.NODE_ENV !== 'production';\n\nexport default new Vuex.Store({\n  state: {},\n  modules: {},\n  strict: debug,\n});\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-SG\": \"cdab\",\n\t\"./en-SG.js\": \"cdab\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('TopNavigationBar',{attrs:{\"version\":_vm.OPEN_TREE_RESOLVER_VERSION}}),_c('div',{attrs:{\"id\":\"wrapper\"}},[_c('PhylorefTable')],1),_c('AboutOpenTreeResolverModal')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"66bcdb1a-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=template&id=3701b908&\"","// Import Vue.\nimport Vue from 'vue';\n\n// Import Bootstrap.\nimport 'bootstrap';\nimport BootstrapVue from 'bootstrap-vue';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.min.css';\n\n// Use vue-resize to track when phylogenies are resized.\nimport VueResize from 'vue-resize';\nimport 'vue-resize/dist/vue-resize.css';\n\n// Import the main Vue file.\nimport App from './App.vue';\n\n// Import our Vuex store.\nimport store from './store';\n\n// Set up JQuery as a global.\nwindow.$ = require('jquery');\n\n// Add additional features to Vue.\nVue.use(BootstrapVue);\nVue.use(VueResize);\n\n// Turn off the Vue production tip on the console on Vue startup.\nVue.config.productionTip = false;\n\n// Set up Vue object.\nexport default new Vue({\n  el: '#app',\n  store,\n  render: h => h(App),\n});\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=script&lang=js&\"","<template>\n  <!-- About-us modal dialog box: acknowledges funding and links to libraries used -->\n  <div\n    id=\"about-open-tree-resolver\"\n    class=\"modal\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n  >\n    <div\n      class=\"modal-dialog\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <!-- Header of tunit editor modal dialog box -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">\n            About this tool\n          </h5>\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">\n              &times;\n            </span>\n          </button>\n        </div>\n\n        <!-- Body of the about-us modal dialog -->\n        <div class=\"modal-body col-md-12\">\n          <p>\n            The Phyloreference Open Tree Resolver was built as part of the\n            <a href=\"https://www.phyloref.org\">\n              Phyloreferencing project\n            </a>,\n            funded by the US National Science Foundation through collaborative\n            grants <a href=\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458484\">\n              DBI-1458484\n            </a>\n            and <a href=\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458604\">\n              DBI-1458604\n            </a>.\n            See <a href=\"http://www.phyloref.org/about/#funding\">\n              Funding\n            </a> for details.\n          </p>\n\n          <p>The Curation Tool uses a number of open-source libraries, including:</p>\n\n          <ul>\n            <li>\n              <a href=\"https://cli.vuejs.org/\">\n                Vue CLI 3\n              </a>\n            </li>\n            <li>\n              <a href=\"https://getbootstrap.com/\">\n                Bootstrap\n              </a>\n            </li>\n            <li>\n              <a href=\"https://jquery.com/\">\n                jQuery\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/veg/phylotree.js\">\n                phylotree.js\n              </a>,\n              published as <a href=\"https://doi.org/10.1186/s12859-018-2283-2\">\n                Shank <em>et al</em>, 2018\n              </a>\n            </li>\n            <li>\n              <a href=\"https://d3js.org/\">\n                D3.js\n              </a>\n            </li>\n            <li>\n              <a href=\"https://momentjs.com/\">\n                Moment.js\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/eligrey/FileSaver.js\">\n                FileSaver.js\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <!-- Footer of the about-us modal dialog -->\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * A modal for displaying information about the Curation Tool\n */\n\nexport default {\n  name: 'AboutOpenTreeResolverModal',\n};\n</script>\n","<template>\n  <div>\n    <div class=\"card border-dark\">\n      <h5 class=\"card-header border-dark\">\n        Phyloreferences\n      </h5>\n      <div class=\"card-body p-0\">\n        <table class=\"table table-hover table-flush\">\n          <thead>\n            <th width=\"15%\">Name</th>\n            <th width=\"25%\">Description</th>\n            <th>Resolved Open Tree node</th>\n            <th width=\"30%\">Specifiers</th>\n            <th>Open Tree Taxonomy ID</th>\n          </thead>\n          <tbody>\n            <tr\n              v-if=\"loadedPhylorefs.length === 0\"\n              class=\"bg-white\"\n            >\n              <td colspan=\"5\">\n                <center><em>No phyloreferences loaded</em></center>\n              </td>\n            </tr>\n            <template v-for=\"(phyloref, phylorefIndex) of loadedPhylorefs\">\n              <tr :key=\"phylorefIndex\"><!-- This :key only works as long as users can't reorder the phylorefs -->\n                <td :rowspan=\"getSpecifiersForPhyloref(phyloref).length + 1\">\n                  {{ phyloref.label || `Phyloref ${phylorefIndex + 1}` }}\n                </td>\n                <td :rowspan=\"getSpecifiersForPhyloref(phyloref).length + 1\">\n                  <span v-html=\"getPhylorefDescription(phyloref)\"></span>\n                </td>\n                <td :rowspan=\"getSpecifiersForPhyloref(phyloref).length + 1\">\n                  &nbsp;\n                  <template v-for=\"(nodeId, nodeIdIndex) of reasoningResults[phyloref['@id']]\">\n                    <a target=\"_blank\" :href=\"'https://tree.opentreeoflife.org/opentree/@' + getOTTNodeId(currentNodes[nodeId])[1]\">{{getOTTNodeId(currentNodes[nodeId])[1]}}</a><br />\n                  </template>\n                </td>\n              </tr>\n              <template v-for=\"specifier of getSpecifiersForPhyloref(phyloref)\">\n                <tr :key=\"'phyloref' + phylorefIndex + ', specifier: ' + getLabelForSpecifier(specifier)\">\n                  <td>{{getSpecifierType(phyloref, specifier)}} <span v-html=\"getLabelForSpecifierAsHTML(specifier)\"></span></td>\n                  <td>\n                    <template v-if=\"getOpenTreeTaxonomyID(specifier)\">\n                      <a target=\"_blank\" :href=\"'https://tree.opentreeoflife.org/opentree/@ott' + getOpenTreeTaxonomyID(specifier)\">{{getOpenTreeTaxonomyID(specifier)}}</a>\n                      (<a target=\"_blank\" :href=\"'https://tree.opentreeoflife.org/taxonomy/browse?id=' + getOpenTreeTaxonomyID(specifier)\">ott</a>)\n                    </template>\n                  </td>\n                </tr>\n              </template>\n            </template>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group\" role=\"group\" area-label=\"Add phyloreferences\">\n          <button\n            class=\"btn btn-primary\"\n            href=\"javascript: void(0)\"\n            onclick=\"$('#load-jsonld').trigger('click')\"\n          >\n            Add from JSON-LD file\n          </button>\n          <input\n            id=\"load-jsonld\"\n            type=\"file\"\n            multiple=\"true\"\n            class=\"d-none\"\n            @change=\"loadJSONLDFromFileInputById('#load-jsonld')\"\n          >\n          <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"addFromExamples\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Add from example file\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"addFromExamples\">\n            <a href=\"javascript:;\" class=\"dropdown-item\" v-for=\"example of exampleJSONLDURLs\" v-bind:key=\"example.url\" @click=\"loadJSONLDFromURL(example.url)\">\n              {{example.title}}\n            </a>\n          </div>\n        </div>\n        <div class=\"btn-group ml-2\" role=\"group\" area-label=\"Edit phyloreference list\">\n          <button class=\"btn btn-danger\" type=\"button\" @click=\"loadedPhylorefs = []\">\n            Clear phyloreferences\n          </button>\n        </div>\n        <div class=\"btn-group ml-2\" role=\"group\" area-label=\"Open Tree Taxonomy tasks\">\n          <button class=\"btn btn-primary\" type=\"button\" @click=\"queryOpenTreeTaxonomyIDs()\">\n            Look up Open Tree of Life Taxonomy IDs\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card border-dark mt-2\">\n      <h5 class=\"card-header border-dark\">\n        Phylogeny as Newick\n      </h5>\n      <div class=\"card-body\">\n        <form>\n          <div class=\"form-group row\">\n            <label\n              for=\"newick\"\n              class=\"col-md-2 control-label\"\n            >\n              Newick\n            </label>\n            <div class=\"col-md-10 input-group\">\n              <textarea\n                v-model.lazy=\"newick\"\n                rows=\"3\"\n                class=\"form-control\"\n                placeholder=\"Enter Newick string for phylogeny here\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group\" role=\"group\" area-label=\"Look up trees on the Open Tree of Life\">\n          <button\n            class=\"btn btn-primary\"\n            href=\"javascript: void(0)\"\n            @click=\"downloadInducedSubtreeFromOpenTreeOfLife(ottIdsForAllSpecifiers)\"\n          >\n            Download induced subtree from the Open Tree of Life\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Display the phylogeny (unless there were Newick parsing errors) -->\n    <div\n      class=\"card border-dark mt-2\"\n    >\n      <h5 class=\"card-header\">\n        Phylogeny visualization\n      </h5>\n      <div class=\"card-body\">\n        <Phylotree\n          :newick=\"newick\"\n        />\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group\" role=\"group\" area-label=\"Reason over this phylogeny\">\n          <button\n            class=\"btn btn-primary\"\n            href=\"javascript: void(0)\"\n            @click=\"reasonOverPhylogeny()\"\n          >\n            Reason over this phylogeny<span v-if=\"reasoningInProgress\"> (in progress)</span>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n/*\n * A modal for displaying information about loaded phyloreferences,\n * and the ability to add new phyloreferences.\n */\n\nimport { has, isEqual, uniq, chunk, isString } from 'lodash';\nimport Vue from 'vue';\nimport jQuery from 'jquery';\nimport { PhylorefWrapper, PhylogenyWrapper, ScientificNameWrapper } from '@phyloref/phyx';\n\nimport Phylotree from './phylogeny/Phylotree.vue';\n\nexport default {\n  name: 'PhylorefTable',\n  components: {\n    Phylotree,\n  },\n  data: function () {\n    return {\n      flagDisplayExpression: false,\n      loadedPhylorefs: [],\n      openTreeTaxonomyInfoByName: {},\n      newick: '()',\n      PHYX_CONTEXT_JSON: \"http://www.phyloref.org/phyx.js/context/v0.1.0/phyx.json\",\n      ONTOLOGY_BASEURI: \"http://example.org/#\",\n      reasoningInProgress: false,\n      reasoningResults: {},\n      currentNodes: {}\n    };\n  },\n  computed: {\n    allSpecifiers() {\n      return this.loadedPhylorefs.map(phyloref => this.getSpecifiersForPhyloref(phyloref)).reduce((acc, val) => acc.concat(val), []);\n    },\n    phylorefsWithMoreThanOneSpecifier() {\n      return this.loadedPhylorefs.filter(phyloref => (this.getSpecifiersForPhyloref(phyloref) || []).length > 1);\n    },\n    ottIdsForAllSpecifiers() {\n      // Assumes that queryOpenTreeTaxonomyIDs has already been called!\n      const ottIds = this.allSpecifiers.map(specifier => this.getOpenTreeTaxonomyID(specifier))\n        .filter(x => x !== undefined && x !== null);\n      return ottIds;\n    },\n    asOntology() {\n      const phylorefsWithEquivalentClass = this.loadedPhylorefs.filter(\n        phyloref => has(phyloref, 'equivalentClass')\n      );\n      // Add the phylogeny.\n      const phylogenyNodes = new PhylogenyWrapper({\n        newick: this.newick,\n      }).getNodesAsJSONLD(this.ONTOLOGY_BASEURI + 'phylogeny');\n      const phylorefsByLabel = {};\n      phylorefsWithEquivalentClass.forEach(phyloref => {\n        if(has(phyloref, 'label')) {\n          if(!has(phyloref, '@id')) {\n            // TODO: make up an '@id'.\n          }\n          phylorefsByLabel[phyloref.label] = phyloref;\n        }\n      });\n      // Modify nodes to support Model 2.0 taxonomic units.\n      this.currentNodes = {};\n      phylogenyNodes.forEach(nodeAsParam => {\n        const node = nodeAsParam;\n        // Set a context.\n        node['@context'] = this.PHYX_CONTEXT_JSON;\n        // Make sure this node has a '@type'.\n        if (!has(node, '@type')) node['@type'] = [];\n        if (!Array.isArray(node['@type'])) node['@type'] = [node['@type']];\n        // We replace \"parent\" with \"obo:CDAO_0000179\" so we get has_Parent\n        // relationships in our output ontology.\n        // To be fixed in https://github.com/phyloref/phyx.js/issues/10\n        if (has(node, 'parent')) node['obo:CDAO_0000179'] = { '@id': node.parent };\n        // For every internal node in this phylogeny, check to see if it's expected to\n        // resolve to a phylogeny we know about. If so, add an rdf:type to that effect.\n        let expectedToResolveTo = node.labels || [];\n        // Are there any phyloreferences expected to resolve here?\n        if (has(node, 'expectedPhyloreferenceNamed')) {\n          expectedToResolveTo = expectedToResolveTo.concat(node.expectedPhyloreferenceNamed);\n        }\n        expectedToResolveTo.forEach((phylorefLabel) => {\n          if (!has(phylorefsByLabel, phylorefLabel)) return;\n          // This node is expected to match phylorefLabel, which is a phyloreference we know about.\n          const phylorefId = phylorefsByLabel[phylorefLabel]['@id'];\n          node['@type'].push({\n            '@type': 'owl:Restriction',\n            onProperty: 'obo:OBI_0000312', // obi:is_specified_output_of\n            someValuesFrom: {\n              '@type': 'owl:Class',\n              intersectionOf: [\n                { '@id': 'obo:OBI_0302910' }, // obi:prediction\n                {\n                  '@type': 'owl:Restriction',\n                  onProperty: 'obo:OBI_0000293', // obi:has_specified_input\n                  someValuesFrom: { '@id': phylorefId },\n                },\n              ],\n            },\n          });\n        });\n        // Does this node have taxonomic units? If so, convert them into class expressions.\n        if (has(node, 'representsTaxonomicUnits')) {\n          node.representsTaxonomicUnits.forEach((tunit) => {\n            this.convertTUtoRestriction(tunit).forEach((restriction) => {\n              node['@type'].push({\n                '@type': 'owl:Restriction',\n                onProperty: 'obo:CDAO_0000187',\n                someValuesFrom: restriction,\n              });\n            });\n          });\n        }\n        // Now, rdfpipe can handle '@type's that contain restrictions,\n        // but OWLAPI can't. So let's translate all '@type's into\n        // 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'.\n        node['http://www.w3.org/1999/02/22-rdf-syntax-ns#type'] = node['@type']\n          .map(c => isString(c) ? { '@id': c } : c);\n        delete node['@type'];\n        // Store for later lookups.\n        this.currentNodes[node['@id']] = node;\n      });\n      // Finally, add a header for this ontology.\n      let ontologyHeader = [\n        {\n          '@context': this.PHYX_CONTEXT_JSON,\n          '@id': this.ONTOLOGY_BASEURI,\n          '@type': 'owl:Ontology',\n          'owl:imports': [\n            'http://raw.githubusercontent.com/phyloref/curation-workflow/develop/ontologies/phyloref_testcase.owl',\n            'http://ontology.phyloref.org/2018-12-14/phyloref.owl',\n            'http://ontology.phyloref.org/2018-12-14/tcan.owl',\n          ],\n        },\n      ];\n      return JSON.stringify(ontologyHeader.concat(phylorefsWithEquivalentClass).concat(phylogenyNodes), null, 4);\n    },\n    exampleJSONLDURLs() { return [\n      // Returns a list of example files to display in the \"Examples\" menu.\n      {\n        url: 'examples/fisher_et_al_2007.jsonld',\n        title: 'Fisher et al, 2007',\n      },\n      {\n        url: 'examples/hillis_and_wilcox_2005.jsonld',\n        title: 'Hillis and Wilcox, 2005',\n      },\n      {\n        url: 'examples/brochu_2003.jsonld',\n        title: 'Brochu 2003',\n      },\n    ]}\n  },\n  methods: {\n    convertTUtoRestriction(tunit) {\n      // If we're called with a specifier, use the first TU in that specifier (for now).\n      if (has(tunit, 'referencesTaxonomicUnits')) {\n        return this.convertTUtoRestriction(tunit.referencesTaxonomicUnits[0] || {});\n      }\n      // Build up a series of taxonomic units from scientific names and specimens.\n      const results = [];\n      if (has(tunit, 'scientificNames')) {\n        tunit.scientificNames.forEach((sciname) => {\n          const wrappedSciname = new ScientificNameWrapper(sciname);\n          results.push({\n            '@type': 'owl:Restriction',\n            onProperty: 'http://rs.tdwg.org/ontology/voc/TaxonConcept#hasName',\n            someValuesFrom: {\n              '@type': 'owl:Class',\n              intersectionOf: [\n                {\n                  // TODO: replace with a check once we close https://github.com/phyloref/phyx.js/issues/5.\n                  // For now, we pretend that all names are ICZN names.\n                  '@id': 'obo:NOMEN_0000107',\n                },\n                {\n                  '@type': 'owl:Restriction',\n                  onProperty: 'dwc:scientificName',\n                  // TODO: We really want the \"canonical name\" here: binomial or\n                  // trinomial, but without any additional authority information.\n                  // See https://github.com/phyloref/phyx.js/issues/8\n                  hasValue: wrappedSciname.binomialName,\n                },\n              ],\n            },\n          });\n        });\n      } else if (has(tunit, 'includesSpecimens')) {\n        // This is a quick-and-dirty implementation. Discussion about it should be\n        // carried out in https://github.com/phyloref/clade-ontology/issues/61\n        tunit.includesSpecimens.forEach((specimen) => {\n          const wrappedSpecimen = new SpecimenWrapper(specimen);\n          results.push({\n            '@type': 'owl:Restriction',\n            onProperty: 'dwc:organismID',\n            hasValue: wrappedSpecimen.occurrenceID,\n          });\n        });\n      } else {\n        // Ignore it for now (but warn the user).\n        console.log(`WARNING: taxonomic unit could not be converted into restriction: ${JSON.stringify(tunit)}\\n`);\n        results.push({});\n      }\n      return results;\n    },\n\n    reasonOverPhylogeny() {\n      // Send JSON-LD to server for reasoning.\n      // Reason over all the phyloreferences and store the results on\n      // the Vue model at vm.reasoningResults so we can access them.\n      // Are we already reasoning? If so, ignore.\n      if (this.reasoningInProgress) return;\n      // Disable \"Reason\" buttons so they can't be reused.\n      this.reasoningInProgress = true;\n      this.reasoningResults = {};\n\n      jQuery.post('http://localhost:34214/reason', {\n        // This will convert the JSON-LD file into an application/x-www-form-urlencoded\n        // string (see https://api.jquery.com/jquery.ajax/#jQuery-ajax-settings under\n        // processData for details). The POST data sent to the server will look like:\n        //  jsonld=%7B%5B%7B%22title%22%3A...\n        // which translates to:\n        //  jsonld={[{\"title\":...\n        jsonld: this.asOntology,\n      }).done((data) => {\n        this.reasoningResults = data.phylorefs;\n        // console.log('Data retrieved: ', data);\n      }).fail((jqXHR, textStatus, errorThrown) => {\n        // We can try using the third argument, but it appears to be the\n        // HTTP status (e.g. 'Internal Server Error'). So we default to that,\n        // but look for a better one in the JSON response from the server, if\n        // available.\n        let error = errorThrown;\n        if (has(jqXHR, 'responseJSON') && has(jqXHR.responseJSON, 'error')) {\n          error = jqXHR.responseJSON.error;\n        }\n        if (error === undefined || error === '') error = 'unknown error';\n        alert(`Error occurred on server while reasoning: ${error}`);\n      }).always(() => {\n        // Reset \"Reasoning\" buttons to their usual state.\n        this.reasoningInProgress = false;\n      });\n    },\n\n    getOTTNodeId(node) {\n      const labels = node.labels || [];\n      if(labels.length == 0) return undefined;\n      const label = labels[0]; // Ignore other labels.\n      const match = /^(.*)[_\\s](.*?ott.*)$/.exec(label);\n      if(match == null) {\n          const matchMRCA = /^mrca.*$/.exec(label);\n          if(matchMRCA == null) return undefined;\n          return [\"\", label];\n      }\n      return [match[1], match[2]];\n    },\n\n    downloadInducedSubtreeFromOpenTreeOfLife(ottIds) {\n      if(ottIds.length === 0) return;\n\n      // Induced subtree approach\n      jQuery.ajax({\n        type: 'POST',\n        url: 'https://ot39.opentreeoflife.org/v3/tree_of_life/induced_subtree',\n        data: JSON.stringify({\n          ott_ids: ottIds,\n        }),\n        contentType: 'application/json; charset=utf-8',\n        dataType: 'json',\n        success: (data) => {\n          this.newick = data.newick;\n        },\n      })\n        .fail(x => {\n          if(x.responseJSON.message === \"[/v3/tree_of_life/induced_subtree] Error: Nodes not found!\") {\n            const unknownOttIds = x.responseJSON.unknown;\n            console.log(\"The Open Tree synthetic tree does not contain the following nodes: \", unknownOttIds);\n            const knownOttIds = ottIds.filter(id => !has(unknownOttIds, \"ott\" + id));\n            console.log(\"Query has been reduced to the following nodes: \", knownOttIds);\n            // Redo query without unknown OTT Ids.\n            jQuery.ajax({\n              type: 'POST',\n              url: 'https://ot39.opentreeoflife.org/v3/tree_of_life/induced_subtree',\n              data: JSON.stringify({\n                ott_ids: knownOttIds,\n              }),\n              contentType: 'application/json; charset=utf-8',\n              dataType: 'json',\n              success: (data) => {\n                this.newick = data.newick;\n              },\n            }).fail(x => console.log(\"Error accessing Open Tree induced_subtree\", x));\n          } else {\n            console.log(\"Error accessing Open Tree induced_subtree\", x);\n          }\n        });\n    },\n\n    getPhylorefDescription(phyloref) {\n      const description = phyloref.cladeDefinition || phyloref['obo:IAO_0000115'] || 'None';\n\n      // If there are '\\n's in the text, replace them with <br>.\n      return description.replace(/\\n+/g, \"<br />\");\n    },\n\n    getOpenTreeTaxonomyID(specifier) {\n      const matches = this.openTreeTaxonomyInfoByName[this.getScinameForSpecifier(specifier)];\n      if(matches && matches.length > 0) {\n        return matches[0]['taxon']['ott_id'];\n      }\n    },\n\n    queryOpenTreeTaxonomyIDs() {\n      // Calculate names from currently loaded specifiers.\n      const names = this.allSpecifiers.map(specifier => this.getScinameForSpecifier(specifier));\n      this.queryOpenTreeTaxonomyIDsForNames({names});\n    },\n\n    setOpenTreeTaxonomyInfoByNames(results) {\n      results.forEach(info => {\n        if(has(info, 'name') && info.name && has(info, 'matches') && info.matches && info.matches.length > 0) {\n          const name = info.name.trim();\n          // console.log(\"Setting\", name, \"to\", info['matches']);\n          // Do we have any flags? If so, ignore this.\n          const flags = info.matches[0].taxon.flags || [];\n          // TODO do something cleverer when choosing between multiple matches\n          Vue.set(this.openTreeTaxonomyInfoByName, name, info['matches'] || []);\n        }\n      });\n    },\n\n    queryOpenTreeTaxonomyIDsForNames(options) {\n      // Creates queries to the Open Tree Taxonomy for the provided names.\n      // This will return asynchonously; you need to call getOpenTreeTaxonomyID(name)\n      // to retrieve the results.\n      // Options can be anything from https://github.com/OpenTreeOfLife/germinator/wiki/TNRS-API-v3#match_names, including:\n      //  - context_name:\n      //  - do_approximate_matching\n      // Deduplicate names to be queried.\n      const names = uniq(options.names)\n        .filter(name => name !== undefined && name !== null) // Eliminate any undefineds or nulls.\n        .sort();\n      // Step 1. Delete existing entries for the provided names.\n      this.setOpenTreeTaxonomyInfoByNames(names.map(name => {\n        return {\n          name,\n          matches: [],\n        };\n      }));\n      // OToL TNRS match_names has a limit of 1,000 names.\n      chunk(names, 999).forEach(chunk => {\n        options.names = chunk;\n        const data = JSON.stringify(options);\n        // Step 2. Spawn queries to OTT asking for the names.\n        jQuery.ajax({\n          type: 'POST',\n          url: 'https://api.opentreeoflife.org/v3/tnrs/match_names',\n          data,\n          contentType: 'application/json; charset=utf-8',\n          dataType: 'json',\n          success: (data) => {\n            this.setOpenTreeTaxonomyInfoByNames(data.results);\n          },\n        })\n          .fail(x => console.log(\"Error accessing Open Tree Taxonomy\", x));\n      });\n    },\n\n    getSpecifierType(phyloref, specifier) {\n      if((phyloref.internalSpecifiers || []).indexOf(specifier) !== -1) return \"includes\";\n      if((phyloref.externalSpecifiers || []).indexOf(specifier) !== -1) return \"excludes\";\n      return \"unknown\";\n    },\n\n    getSpecifiersForPhyloref(phyloref) {\n      const specifiers = phyloref.internalSpecifiers || [];\n      return specifiers.concat(phyloref.externalSpecifiers || []);\n    },\n\n    getLabelForSpecifier(specifier) {\n      return PhylorefWrapper.getSpecifierLabel(specifier);\n    },\n\n    getLabelForSpecifierAsHTML(specifier) {\n      const label = PhylorefWrapper.getSpecifierLabel(specifier);\n      if(label.startsWith(\"Specimen\")) return label;\n\n      return label.replace(/^\\w+ [a-z\\-]+/, \"<em>$&</em>\");\n    },\n\n    getScinameForSpecifier(specifier) {\n      const label = PhylorefWrapper.getSpecifierLabel(specifier);\n      if(label.startsWith(\"Specimen\")) return undefined;\n      const matches = label.match(/^\\w+ [a-z\\-]+/);\n      if(matches) return matches[0];\n      return undefined;\n    },\n\n    loadJSONLDFromURL(url) {\n      // Change the current PHYX to that in the provided URL.\n      // Will ask the user to confirm before replacing it.\n\n      jQuery.getJSON(url)\n        .done((data) => {\n          this.extractPhyloreferencesFromJSONLD(data);\n        })\n        .fail((error) => {\n          if (error.status === 200) {\n            alert(`Could not load JSON-LD file '${url}': file malformed, see console for details.`);\n          } else {\n            alert(`Could not load JSON-LD file '${url}': server error ${error.status} ${error.statusText} from ${JSON.stringify(error)}`);\n          }\n        });\n    },\n\n    loadJSONLDFromFileInputById(fileInputId) {\n      //\n      // Load a JSON file from the local file system using FileReader. fileInput\n      // needs to be an HTML element representing an <input type=\"file\"> in which\n      // the user has selected the local file they wish to load.\n      //\n      // This code is based on https://stackoverflow.com/a/21446426/27310\n\n      if (typeof window.FileReader !== 'function') {\n        alert('The FileReader API is not supported on this browser.');\n        return;\n      }\n\n      const $fileInput = jQuery(fileInputId);\n      if (!$fileInput) {\n        alert('Programmer error: No file input element specified.');\n        return;\n      }\n\n      if (!$fileInput.prop('files')) {\n        alert('File input element found, but files property missing: try another browser?');\n        return;\n      }\n\n      const files = $fileInput.prop('files');\n      if (files.length === 0) {\n        alert('Please select a file before attempting to load it.');\n        return;\n      }\n\n      for(let x = 0; x < files.length; x++) {\n        const file = files.item(x);\n        const fr = new FileReader();\n        fr.onload = ((e) => {\n          const lines = e.target.result;\n          const jsonld = JSON.parse(lines);\n\n          this.extractPhyloreferencesFromJSONLD(jsonld);\n        });\n        fr.readAsText(file);\n      }\n    },\n\n    addPhyloref(phyloref) {\n      // Check to make sure this phyloref hasn't already been added.\n      if(this.loadedPhylorefs.find(phy => isEqual(phy, phyloref)) !== undefined) return;\n\n      // No previous match? Then add it in!\n      this.loadedPhylorefs.push(phyloref);\n    },\n\n    extractPhyloreferencesFromJSONLD(jsonld) {\n      // Extract phyloreferences from the provided JSONLD file and add them to\n      // state.loaded. We use isEqual to prevent adding the same phyloreference\n      // more than once, but we will add different phyloreferences with the\n      // same '@id'.\n\n      // JSON-LD files sometimes contain an array of elements. In this case,\n      // we should try adding every one.\n      if(Array.isArray(jsonld)) {\n        jsonld.forEach(element => this.extractPhyloreferencesFromJSONLD(element));\n      }\n\n      // If this was generated by the Authoring Tool, then we can find phyloreferences\n      // just by looking for jsonld.phylorefs.\n      if(has(jsonld, 'phylorefs') && Array.isArray(jsonld.phylorefs)) {\n        jsonld.phylorefs.forEach(phy => this.addPhyloref(phy));\n      }\n\n      // If it was created by phyx2ontology, the phyloreferences can be recognized\n      // has having a subClassOf 'phyloref:Phyloreference'. Let's look for that.\n      if(has(jsonld, 'subClassOf')) {\n        if(Array.isArray(jsonld.subClassOf) && jsonld.subClassOf.includes('phyloref:Phyloreference'))\n          this.addPhyloref(jsonld);\n        if(jsonld.subClassOf === 'phyloref:Phyloreference')\n          this.addPhyloref(jsonld);\n      }\n    },\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=style&index=0&lang=css&\"","import { render, staticRenderFns } from \"./PhylorefTable.vue?vue&type=template&id=3041528f&\"\nimport script from \"./PhylorefTable.vue?vue&type=script&lang=js&\"\nexport * from \"./PhylorefTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"card border-dark\"},[_c('h5',{staticClass:\"card-header border-dark\"},[_vm._v(\"\\n      Phyloreferences\\n    \")]),_c('div',{staticClass:\"card-body p-0\"},[_c('table',{staticClass:\"table table-hover table-flush\"},[_vm._m(0),_c('tbody',[(_vm.loadedPhylorefs.length === 0)?_c('tr',{staticClass:\"bg-white\"},[_c('td',{attrs:{\"colspan\":\"5\"}},[_c('center',[_c('em',[_vm._v(\"No phyloreferences loaded\")])])],1)]):_vm._e(),_vm._l((_vm.loadedPhylorefs),function(phyloref,phylorefIndex){return [_c('tr',{key:phylorefIndex},[_c('td',{attrs:{\"rowspan\":_vm.getSpecifiersForPhyloref(phyloref).length + 1}},[_vm._v(\"\\n                \"+_vm._s(phyloref.label || (\"Phyloref \" + (phylorefIndex + 1)))+\"\\n              \")]),_c('td',{attrs:{\"rowspan\":_vm.getSpecifiersForPhyloref(phyloref).length + 1}},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.getPhylorefDescription(phyloref))}})]),_c('td',{attrs:{\"rowspan\":_vm.getSpecifiersForPhyloref(phyloref).length + 1}},[_vm._v(\"\\n                 \\n                \"),_vm._l((_vm.reasoningResults[phyloref['@id']]),function(nodeId,nodeIdIndex){return [_c('a',{attrs:{\"target\":\"_blank\",\"href\":'https://tree.opentreeoflife.org/opentree/@' + _vm.getOTTNodeId(_vm.currentNodes[nodeId])[1]}},[_vm._v(_vm._s(_vm.getOTTNodeId(_vm.currentNodes[nodeId])[1]))]),_c('br')]})],2)]),_vm._l((_vm.getSpecifiersForPhyloref(phyloref)),function(specifier){return [_c('tr',{key:'phyloref' + phylorefIndex + ', specifier: ' + _vm.getLabelForSpecifier(specifier)},[_c('td',[_vm._v(_vm._s(_vm.getSpecifierType(phyloref, specifier))+\" \"),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.getLabelForSpecifierAsHTML(specifier))}})]),_c('td',[(_vm.getOpenTreeTaxonomyID(specifier))?[_c('a',{attrs:{\"target\":\"_blank\",\"href\":'https://tree.opentreeoflife.org/opentree/@ott' + _vm.getOpenTreeTaxonomyID(specifier)}},[_vm._v(_vm._s(_vm.getOpenTreeTaxonomyID(specifier)))]),_vm._v(\"\\n                    (\"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":'https://tree.opentreeoflife.org/taxonomy/browse?id=' + _vm.getOpenTreeTaxonomyID(specifier)}},[_vm._v(\"ott\")]),_vm._v(\")\\n                  \")]:_vm._e()],2)])]})]})],2)])]),_c('div',{staticClass:\"card-footer\"},[_c('div',{staticClass:\"btn-group\",attrs:{\"role\":\"group\",\"area-label\":\"Add phyloreferences\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"href\":\"javascript: void(0)\",\"onclick\":\"$('#load-jsonld').trigger('click')\"}},[_vm._v(\"\\n          Add from JSON-LD file\\n        \")]),_c('input',{staticClass:\"d-none\",attrs:{\"id\":\"load-jsonld\",\"type\":\"file\",\"multiple\":\"true\"},on:{\"change\":function($event){return _vm.loadJSONLDFromFileInputById('#load-jsonld')}}}),_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"type\":\"button\",\"id\":\"addFromExamples\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n          Add from example file\\n        \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"addFromExamples\"}},_vm._l((_vm.exampleJSONLDURLs),function(example){return _c('a',{key:example.url,staticClass:\"dropdown-item\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.loadJSONLDFromURL(example.url)}}},[_vm._v(\"\\n            \"+_vm._s(example.title)+\"\\n          \")])}),0)]),_c('div',{staticClass:\"btn-group ml-2\",attrs:{\"role\":\"group\",\"area-label\":\"Edit phyloreference list\"}},[_c('button',{staticClass:\"btn btn-danger\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.loadedPhylorefs = []}}},[_vm._v(\"\\n          Clear phyloreferences\\n        \")])]),_c('div',{staticClass:\"btn-group ml-2\",attrs:{\"role\":\"group\",\"area-label\":\"Open Tree Taxonomy tasks\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.queryOpenTreeTaxonomyIDs()}}},[_vm._v(\"\\n          Look up Open Tree of Life Taxonomy IDs\\n        \")])])])]),_c('div',{staticClass:\"card border-dark mt-2\"},[_c('h5',{staticClass:\"card-header border-dark\"},[_vm._v(\"\\n      Phylogeny as Newick\\n    \")]),_c('div',{staticClass:\"card-body\"},[_c('form',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-md-2 control-label\",attrs:{\"for\":\"newick\"}},[_vm._v(\"\\n            Newick\\n          \")]),_c('div',{staticClass:\"col-md-10 input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.newick),expression:\"newick\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"rows\":\"3\",\"placeholder\":\"Enter Newick string for phylogeny here\"},domProps:{\"value\":(_vm.newick)},on:{\"change\":function($event){_vm.newick=$event.target.value}}})])])])]),_c('div',{staticClass:\"card-footer\"},[_c('div',{staticClass:\"btn-group\",attrs:{\"role\":\"group\",\"area-label\":\"Look up trees on the Open Tree of Life\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){return _vm.downloadInducedSubtreeFromOpenTreeOfLife(_vm.ottIdsForAllSpecifiers)}}},[_vm._v(\"\\n          Download induced subtree from the Open Tree of Life\\n        \")])])])]),_c('div',{staticClass:\"card border-dark mt-2\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n      Phylogeny visualization\\n    \")]),_c('div',{staticClass:\"card-body\"},[_c('Phylotree',{attrs:{\"newick\":_vm.newick}})],1),_c('div',{staticClass:\"card-footer\"},[_c('div',{staticClass:\"btn-group\",attrs:{\"role\":\"group\",\"area-label\":\"Reason over this phylogeny\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"href\":\"javascript: void(0)\"},on:{\"click\":function($event){return _vm.reasonOverPhylogeny()}}},[_vm._v(\"\\n          Reason over this phylogeny\"),(_vm.reasoningInProgress)?_c('span',[_vm._v(\" (in progress)\")]):_vm._e()])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('th',{attrs:{\"width\":\"15%\"}},[_vm._v(\"Name\")]),_c('th',{attrs:{\"width\":\"25%\"}},[_vm._v(\"Description\")]),_c('th',[_vm._v(\"Resolved Open Tree node\")]),_c('th',{attrs:{\"width\":\"30%\"}},[_vm._v(\"Specifiers\")]),_c('th',[_vm._v(\"Open Tree Taxonomy ID\")])])}]\n\nexport { render, staticRenderFns }","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"66bcdb1a-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefTable.vue?vue&type=template&id=3041528f&\"","import { render, staticRenderFns } from \"./Phylotree.vue?vue&type=template&id=521315d2&\"\nimport script from \"./Phylotree.vue?vue&type=script&lang=js&\"\nexport * from \"./Phylotree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Phylotree.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./TopNavigationBar.vue?vue&type=template&id=ccab53fa&\"\nimport script from \"./TopNavigationBar.vue?vue&type=script&lang=js&\"\nexport * from \"./TopNavigationBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./AboutOpenTreeResolverModal.vue?vue&type=template&id=40ef49c2&\"\nimport script from \"./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"\nexport * from \"./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}